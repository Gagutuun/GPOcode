const parseData = require('./parseData.js');


describe('parseData', () => {
  test('should parse data correctly', () => {
    const data = "Здравствуйте, Денис Павлович! РЕШИЛИ: Выяснить возможность перевода займа от АО 'АСБ Беларусбанк' в части Х у ООО 'Агрокластер Березовая долина' на расчетный счет..  \n
Ответственный: [Ф.И.О]\n
Срок исполнения – до XX.XX.XXXX. ";
    const expectedOutput = [{
      errandText: "Выяснить возможность перевода займа от АО 'АСБ Беларусбанк' в части Х у ООО 'Агрокластер Березовая долина' на расчетный счет.",
      asgnName: "[Ф.И.О]",
      deadline: "до XX.XX.XXXX"
    }];
    expect(parseData(data)).toEqual(expectedOutput);
  });


  test('should not parse if DIRECTOR or ZAMS names are absent', () => {
    const data = "Здравствуйте, Денис Павлович! РЕШИЛИ: Выяснить возможность перевода займа от АО 'АСБ Беларусбанк' в части Х у ООО 'Агрокластер Березовая долина' на расчетный счет..  \nОтветственный: [Ф.И.О]\nСрок исполнения – до XX.XX.XXXX. ";
    const expectedOutput = [];
    expect(parseData(data)).toEqual(expectedOutput);
  });


  test('should parse multiple errands correctly', () => {
    const data = "РЕШИЛИ: Структурировать материал по шагам, на основе которых можно будет создать производственную линию, для изготовления термоэффективных окон." +
    "\n
Ответственный: [Ф.И.О.]\n
Срок исполнения – до 15.04.2017." +
    "\n
РЕШИЛИ: Подготовить вопросы об устранении недостатков готовой продукции.\n
Ответственный: [Ф.И.О.]\n
Срок исполнения – до 15.04.2017.";


const expectedOutput = [
  {
    errandText: "Структурировать материал по шагам, на основе которых можно будет создать производственную линию, для изготовления термоэффективных окон.",
    asgnName: "[Ф.И.О.]",
    deadline: "до 15.04.2017"
  },
  {
    errandText: "Подготовить вопросы об устранении недостатков готовой продукции.",
    asgnName: "[Ф.И.О.]",
    deadline: "до 15.04.2017"
  }
];
expect(parseData(data)).toEqual(expectedOutput);

  });
});

